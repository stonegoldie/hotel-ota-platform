name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest

    # ðŸ‘‡ This ensures all commands run from the repo root (where yarn.lock lives)
    defaults:
      run:
        working-directory: .

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: hotel_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      # Setup Node.js (donâ€™t trigger Yarn 1 cache)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # Enable Corepack and Yarn 3.6.4 BEFORE anything else
      - name: Enable Corepack and Yarn 3.6.4
        run: |
          corepack enable
          corepack prepare yarn@3.6.4 --activate
          yarn --version

      # Install dependencies using yarn.lock
      - name: Install dependencies
        run: yarn install --immutable


      # Run lint check
      - name: Lint
        run: yarn lint

      # Run tests (allow pass even if none)
      - name: Test
        run: yarn turbo run test -- --passWithNoTests

      # Build project
      - name: Build
        run: yarn build
